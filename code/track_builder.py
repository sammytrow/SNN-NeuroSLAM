import pygame
import numpy as np
test_track = [
        [[40,20],[80,20],[120,20],[160,20], [200,20],[240,20],[280,20],[320,20],
        [360,20],[400,20],[440,20],[480,20],[520,20],[560,20], [600,20],[640,20],
        [680,20],[720,20],[760,20],[760,20],[800,20],[840,20],[880,20],[920,20],[960,20],
        [1000,20],[1040,20],[1080,20],[1120,20],[1160,20]], #red

        [[40, 120], [80, 120],[120, 120], [160, 120], [200, 120], [240, 120], [280, 120], [320, 120],
        [360, 120], [400, 120], [440, 120], [480, 120], [520, 120], [560, 120], [600, 120], [640, 120],
        [680, 120], [720, 120], [760, 120], [760, 120], [800, 120], [840, 120], [880, 120], [920, 120], [960, 120],
        [1000, 120], [1040, 120], [1080, 120], [1120, 120], [1160, 120]], #blue

        [[240, 110], [90, 100], [90, 90], [90, 80], [90, 70],[90, 60],[90, 50],[90, 40],[90, 30]], # start line

        [[1110, 110], [1110, 100], [1110, 90], [1110, 80], [1110, 70],[1110, 60],[1110, 50],[1110, 40],[1110, 30]] # finish line
]
test_start = [80,80]
test_end = [1120,80]
test_dir = (1, 0)
test_deg = 90
#square track
track1 = [
        [[40,20],[80,20],[120,20],[160,20], [200,20],[240,20],[280,20],[320,20],
        [360,20],[400,20],[440,20],[480,20],[520,20],[560,20], [600,20],[640,20],
        [680,20],[720,20],[760,20],[760,20],[800,20],[840,20],[880,20],[920,20],[960,20],
        [1000,20],[1040,20],[1080,20],[1120,20],[1160,20], #top cones

        [20,80],[20,120],[20,160],[20,200],[20,240],[20,280],[20,320],[20,360],
        [20,400],[20,440],[20,480],[20,520],[20,560],#left cones

        [1180,80],[1180,120],[1180,160],[1180,200],[1180,240],[1180,280],[1180,320],[1180,360],
        [1180,400],[1180,440],[1180,480],[1180,520],[1180,560], #right cones
         
        [40,580],[80,580],[120,580],[160,580], [200,580],[240,580],[280,580],[320,580], #bottom cones
        [360,580],[400,580],[440,580],[480,580],[520,580],[560,580], [600,580],[640,580],
        [680,580],[720,580],[760,580],[800,580],[840,580],[880,580],[920,580],[960,580],
        [1000,580],[1040,580],[1080,580],[1120,580],[1160,580]], #red cones

    [[120, 120], [160, 120], [200, 120], [240, 120], [280, 120], [320, 120],
     [360, 120], [400, 120], [440, 120], [480, 120], [520, 120], [560, 120], [600, 120], [640, 120],
     [680, 120], [720, 120], [760, 120], [760, 120], [800, 120], [840, 120], [880, 120], [920, 120], [960, 120],
     [1000, 120], [1040, 120], [1080, 120],  # top cones

     [120, 160], [120, 200], [120, 240], [120, 280], [120, 320], [120, 360],
     [120, 400], [120, 440],  # left cones

     [1080, 120], [1080, 160], [1080, 200], [1080, 240], [1080, 280], [1080, 320], [1080, 360],
     [1080, 400], [1080, 440],  # right cones

     [120, 480], [160, 480], [200, 480], [240, 480], [280, 480], [320, 480],  # bottom cones
     [360, 480], [400, 480], [440, 480], [480, 480], [520, 480], [560, 480], [600, 480], [640, 480],
     [680, 480], [720, 480], [760, 480], [800, 480], [840, 480], [880, 480], [920, 480], [960, 480],
     [1000, 480], [1040, 480], [1080, 480]], # blue cones

     [[240, 110], [240, 100], [240, 90], [240, 80], [240, 70],[240, 60],[240, 50],[240, 40],[240, 30]] # start line
        ]
start1 = [330,80]
end1 = [280,80]
dir1 = (1, 0)
deg1 = 90
# square track with curved corners and narrow sides
track2 = [
    [[55, 55], [80, 40], [115, 30], [160, 20], [200, 20], [240, 20], [280, 20], [320, 20],
     [360, 20], [400, 20], [440, 20], [480, 20], [520, 20], [560, 20], [600, 20], [640, 20],
     [680, 20], [720, 20], [760, 20], [760, 20], [800, 20], [840, 20], [880, 20], [920, 20], [960, 20],
     [1000, 20], [1040, 20], [1085, 30], [1120, 40], [1145, 55],  # top cones

     [40, 80], [30, 115], [20, 160], [20, 200], [20, 240], [20, 280], [20, 320], [20, 360],
     [20, 400], [20, 440], [20, 480], [35, 520],  # left cones

     [1160, 80], [1170, 115], [1180, 160], [1180, 200], [1180, 240], [1180, 280], [1180, 320], [1180, 360],
     [1180, 400], [1180, 440], [1180, 480], [1170, 520],  # right cones

     [55, 545], [80, 560], [120, 570], [160, 580], [200, 580], [240, 580], [280, 580], [320, 580],  # bottom cones
     [360, 580], [400, 580], [440, 580], [480, 580], [520, 580], [560, 580], [600, 580], [640, 580],
     [680, 580], [720, 580], [760, 580], [800, 580], [840, 580], [880, 580], [920, 580], [960, 580],
     [1000, 580], [1040, 580], [1080, 570], [1120, 560], [1150, 545]],  # red cones

    [[160, 130], [200, 120], [240, 120], [280, 120], [320, 120],
     [360, 120], [400, 120], [440, 120], [480, 120], [520, 120], [560, 120], [600, 120], [640, 120],
     [680, 120], [720, 120], [760, 120], [760, 120], [800, 120], [840, 120], [880, 120], [920, 120], [960, 120],
     [1000, 120], [1040, 130],  # top cones

     [130, 160], [120, 200], [120, 240], [120, 280], [120, 320], [120, 360],
     [120, 400], [130, 440],  # left cones

     [1070, 160], [1080, 200], [1080, 240], [1080, 280], [1080, 320], [1080, 360],
     [1080, 400], [1070, 440],  # right cones

     [160, 470], [200, 480], [240, 480], [280, 480], [320, 480],  # bottom cones
     [360, 480], [400, 480], [440, 480], [480, 480], [520, 480], [560, 480], [600, 480], [640, 480],
     [680, 480], [720, 480], [760, 480], [800, 480], [840, 480], [880, 480], [920, 480], [960, 480],
     [1000, 480], [1040, 470]],  # blue cones

    [[240, 110], [240, 100], [240, 90], [240, 80], [240, 70], [240, 60],[240, 50],[240, 40],[240, 30]]  # start line
]
start2 = [330,80]
end2 = [280,80]
dir2 = (1, 0)
deg2 = 90
# Circle Track
track3 = [
    [],  # red cones

    [],  # blue cones

    [[240, 140], [240, 130], [240, 120], [240, 110], [240, 100], [240, 90],[240, 80],[240, 70],[240, 60]]  # start line
]
# calculate required coordinates for a smooth consistent circle track
M = 100
angle = np.exp(1j * 2 * np.pi / M)
angles = np.cumprod(np.ones(M + 1) * angle)
x, y = np.real(angles), np.imag(angles)
c = 0
for l in range(len(x)):
        track3[0].append([(400 + (360 * x[l])), (300 + (280 * y[l]))])

M = 50
angle = np.exp(1j * 2 * np.pi / M)
angles = np.cumprod(np.ones(M + 1) * angle)
x, y = np.real(angles), np.imag(angles)
c = 0
for l in range(len(x)):
        track3[1].append([(400 + (260 * x[l])), (300 + (180 * y[l]))])

start3 = [330,80]
end3 = [280,80]
dir3 = (1, 0)
deg3 = 90
all_tracks =[
    [test_track, test_start, test_end, test_dir, test_deg, 'test_straight'],
    [track1, start1, end1, dir1, deg1, 'square'],
    [track2, start2, end2, dir2, deg2, 'square_curved_corners'],
    [track3, start3, end3, dir3, deg3, 'circle']
]
''' all track designed above could be stored within text file'''
class TrackBuilder:
    def __init__(self, num):
        self.track_number = num
        self.item_coordinates = all_tracks[num][0]
        self.track = []
        self.start_pos = all_tracks[num][1]
        self.end_pos = all_tracks[num][2]
        self.start_dir = all_tracks[num][3]
        self.start_deg = all_tracks[num][4]
        self.name = all_tracks[num][5]
        self.num_objects = 0
    #build different types object and place within the simulated track
    def build_track(self):
        id = 0
        for conepos in self.item_coordinates[0]:
            self.track.append(Cone(id, [255, 0, 0], 0, conepos))
            id += 1
        for conepos in self.item_coordinates[1]:
            self.track.append(Cone(id, [0, 0, 255], 1, conepos))
            id += 1
        for startline in self.item_coordinates[2]:
            self.track.append(StartLine(id, [211,211,211], 2, startline))
            id += 1
        print(id)
        self.num_objects = id
#each cones has different ids and have 2 types of cones
class Cone:
    def __init__(self, id, colour, type, pos):
        self.colour = colour
        self.type = type
        self.position = np.array([[pos[0], 0, 0], [0, pos[1], 0], [0, 0, 1]])
        self.id = id
        self.size = [3, 3]
    # draw cones
    def draw(self, screen):
        pygame.draw.circle(screen, self.colour, (self.position[0][0], self.position[1][1]), self.size[0], self.size[1])

class StartLine:
    def __init__(self, id, colour, type, pos):
        self.colour = colour
        self.type = type
        self.id = id
        self.position = np.array([[pos[0], 0, 0], [0, pos[1], 0], [0, 0, 1]])
        self.size = [2, 4]
    #draw starting line
    def draw(self, screen):
        pygame.draw.rect(screen, self.colour, (self.position[0][0], self.position[1][1], self.size[0], self.size[1]))